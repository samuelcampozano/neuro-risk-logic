services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: neurorisk_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-neurorisk}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-neurorisk123}
      POSTGRES_DB: ${POSTGRES_DB:-neurorisk_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-neurorisk}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - neurorisk-network

  # Main API Service
  api:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: neurorisk_api
    environment:
      # Database URL constructed from individual components
      DATABASE_URL: postgresql://${POSTGRES_USER:-neurorisk}:${POSTGRES_PASSWORD:-neurorisk123}@db:5432/${POSTGRES_DB:-neurorisk_db}
      # Individual DB components (your app.config.py uses these)
      POSTGRES_USER: ${POSTGRES_USER:-neurorisk}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-neurorisk123}
      POSTGRES_DB: ${POSTGRES_DB:-neurorisk_db}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      # Other settings
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      API_KEY: ${API_KEY:-initial-setup-key}
      ENV: ${ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
    volumes:
      - ../data/models:/app/data/models
      - ../data/synthetic:/app/data/synthetic
      - ../logs:/app/logs
      - ../reports:/app/reports
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - neurorisk-network

  # Automated Retraining Service
  retraining:
    build:
      context: ..
      dockerfile: Dockerfile.retraining
    container_name: neurorisk_retraining
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-neurorisk}:${POSTGRES_PASSWORD:-neurorisk123}@db:5432/${POSTGRES_DB:-neurorisk_db}
      POSTGRES_USER: ${POSTGRES_USER:-neurorisk}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-neurorisk123}
      POSTGRES_DB: ${POSTGRES_DB:-neurorisk_db}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      PYTHONPATH: /app
    volumes:
      - ../data/models:/app/data/models
      - ../data/synthetic:/app/data/synthetic
      - ../logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - neurorisk-network

  # Simple Nginx (optional - you can remove this if not needed)
  nginx:
    image: nginx:alpine
    container_name: neurorisk_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - neurorisk-network

volumes:
  postgres_data:

networks:
  neurorisk-network:
    driver: bridge