services:
  db:
    image: postgres:13
    container_name: neurorisk_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-neurorisk_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-neurorisk_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - neurorisk_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-neurorisk_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: neurorisk_api
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    networks:
      - neurorisk_network
    restart: unless-stopped

  retraining:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.retraining
    container_name: neurorisk_retraining
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    networks:
      - neurorisk_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: neurorisk_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - neurorisk_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  neurorisk_network:
    driver: bridge